{"version":3,"sources":["assets/img/downArrow.svg","components/SideBar/index.js","components/SideBarButton/index.js","components/ImageAvatar/index.js","components/Header/index.js","components/Forms/Form.js","utils/index.js","constants/index.js","components/TextField/index.js","components/Forms/Password.js","components/Select/index.js","components/Forms/Personal.js","components/Forms/Email.js","components/Forms/Career.js","components/UserAccount/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SideBar","_this$props","this","props","sections","openClass","open","react_default","a","createElement","className","concat","map","section","Section","key","title","to","_ref","es","getProps","isActive","_ref2","_ref3","links","Header","link","linkTitle","Link","PureComponent","_ref4","isCurrent","defaultProps","SideBarButton","handleClick","_props$isOpen","isOpen","type","onClick","width","height","viewBox","version","id","stroke","strokeWidth","fill","fillRule","transform","points","ImageAvatar","url","altText","size","src","alt","name","children","components_ImageAvatar","Form","state","data","handleChange","value","_this","setState","Object","objectSpread","defineProperty","handleSubmit","_this2","Children","child","index","isValidElement","element","cloneElement","_element$props","label","inputName","style","animationDelay","assign","renderChildren","buildSelectOptions","arr","arguments","length","undefined","Array","isArray","capitalizeFirstLetter","letter","firstLetter","slice","toUpperCase","toLowerCase","SIDE_BAR_SECTIONS","COUNTRIES","TextField","valueLen","event","target","updateState","isPassword","labelClass","hideBottomBorderClass","passwordClass","newLength","document","querySelector","clientWidth","shouldUpdateValueLen","text","selector","textContent","offsetWidth","getTextWidth","nextProps","placeholder","inputProps","onChange","autoComplete","spellCheck","_this$props2","_this$getCSSClasses","getCSSClasses","role","tabIndex","renderInput","htmlFor","maxWidth","Password","Forms_Form","components_TextField","Select","options","currentItem","hideOptions","timeout","handleItemClick","item","handleFocus","clearTimeout","handleBlur","setTimeout","filterOptions","change","pattern","RegExp","filteredOptions","filter","option","search","_this$state$options","_this$state","selectLabel","onFocus","onBlur","downArrow","renderDropDown","Personal","components_Select","Email","required","Career","UserAccount","isSideBarOpen","toggleSideBar","components_Header","components_SideBarButton","Forms_Password","path","Forms_Email","Forms_Personal","Forms_Career","components_SideBar","App","components_UserAccount","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5367e438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/downArrow.d12342ed.svg\";","import React, { PureComponent } from 'react';\nimport { Link } from '@reach/router';\nimport propTypes from 'prop-types';\nimport './side-bar.scss';\n\nclass SideBar extends PureComponent {\n  static Link({ to, title }) {\n    return (\n      <Link to={to} className=\"side-bar__link side-bar--padding-left\" getProps={SideBar.isActive}>\n        {title}\n      </Link>\n    );\n  }\n\n  static Header({ title }) {\n    return <h3 className=\"side-bar__header side-bar--padding-left\">{title}</h3>;\n  }\n\n  static Section({ section }) {\n    const { title, links } = section;\n    return (\n      <ul className=\"side-bar__section\">\n        <SideBar.Header title={title} />\n        {links.map((link) => {\n          const { to, title: linkTitle } = link;\n          return <SideBar.Link to={to} title={linkTitle} key={to} />;\n        })}\n      </ul>\n    );\n  }\n\n  static isActive = ({ isCurrent }) => (isCurrent\n    ? { className: 'side-bar__link side-bar--padding-left side-bar__link--active' }\n    : null);\n\n  render() {\n    const { sections, open } = this.props;\n    const openClass = open ? 'side-bar--open' : '';\n    return (\n      <div className={`side-bar ${openClass}`}>\n        <h1 className=\"side-bar__logo side-bar--padding-left\">giselle</h1>\n        <div className=\"side-bar__wrapper\">\n          {sections.map(section => (\n            <SideBar.Section section={section} key={section.title} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nSideBar.propTypes = {\n  sections: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.string,\n      links: propTypes.arrayOf(\n        propTypes.shape({\n          title: propTypes.string,\n          to: propTypes.string,\n        }),\n      ),\n    }),\n  ).isRequired,\n  open: propTypes.bool,\n};\n\nSideBar.defaultProps = {\n  open: false,\n};\n\nexport default SideBar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './button.scss';\n\nfunction SideBarButton(props) {\n  const { handleClick, isOpen = true, className } = props;\n  const openClass = isOpen ? 'btn--open' : '';\n  return (\n    <button type=\"button\" className={`btn ${openClass} ${className}`} onClick={handleClick}>\n      <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 32 32\" version=\"1.1\">\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g id=\"Artboard\" transform=\"translate(-81.000000, -80.000000)\" fill=\"#FFFFFF\">\n            <g id=\"Sidebar\" transform=\"translate(-1.000000, -1.000000)\">\n              <g id=\"Arrow\" transform=\"translate(48.000000, 47.000000)\">\n                <polygon points=\"34.00725 47.914236 58.259144 47.914236 47.158484 36.83146 49.98011 34.00011 65.99343 49.987318 63.173028 52.818634 63.150384 52.797112 50.062424 65.999516 47.241818 63.168438 58.39273 51.918688 34.00725 51.918688\" />\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </button>\n  );\n}\n\nSideBarButton.propTypes = {\n  handleClick: propTypes.func,\n  isOpen: propTypes.bool,\n  className: propTypes.string,\n};\n\nSideBarButton.defaultProps = {\n  handleClick: () => {},\n  isOpen: false,\n  className: '',\n};\nexport default SideBarButton;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './image-avatar.scss';\n\nfunction ImageAvatar(props) {\n  const {\n    url, className, altText, size,\n  } = props;\n  return (\n    <div className={`image-avatar image-avatar--${size} ${className}`}>\n      {url && <img src={url} alt={altText} />}\n    </div>\n  );\n}\n\nImageAvatar.propTypes = {\n  url: propTypes.string,\n  altText: propTypes.string,\n  className: propTypes.string,\n  size: propTypes.oneOf(['lg', 'md', 'sm']),\n};\n\nImageAvatar.defaultProps = {\n  className: '',\n  size: 'sm',\n  url: '',\n  altText: '',\n};\n\nexport default ImageAvatar;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ImageAvatar from '../ImageAvatar';\nimport './header.scss';\n\nfunction Header(props) {\n  const { name, url, children } = props;\n  return (\n    <header className=\"header\">\n      <div className=\"header__avatar-wrapper\">\n        <p>{name}</p>\n        <ImageAvatar url={url} altText={name} />\n        {children}\n      </div>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  name: propTypes.string.isRequired,\n  url: propTypes.string,\n  children: propTypes.node,\n};\n\nHeader.defaultProps = {\n  children: null,\n  url: '',\n};\n\nexport default Header;\n","import React, {\n  PureComponent, Children, cloneElement, isValidElement,\n} from 'react';\nimport propTypes from 'prop-types';\nimport './form.scss';\n\nclass Form extends PureComponent {\n  state = {\n    data: {},\n  };\n\n  handleChange = name => (value) => {\n    const { data } = this.state;\n    this.setState({ data: { ...data, [name]: value } });\n  };\n\n  handleSubmit = () => {\n    this.props.handleSubmit(this.state.data);\n  };\n\n  renderChildren() {\n    const { data } = this.state;\n    const { children } = this.props;\n    return Children.map(children, (child, index) => {\n      if (isValidElement(child)) {\n        const element = cloneElement(child);\n        const { name, label } = element.props;\n        const inputName = name || label;\n        return (\n          <div className=\"form__group\" style={{ animationDelay: `${index / 2}s` }}>\n            <element.type\n              {...element.props}\n              handleChange={this.handleChange(inputName)}\n              value={data[inputName]}\n            />\n          </div>\n        );\n      }\n      return null;\n    });\n  }\n\n  render() {\n    const { className, name } = this.props;\n    return (\n      <form className={`form ${className}`}>\n        <h3 className=\"form__header\">{name}</h3>\n        {this.renderChildren()}\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  children: propTypes.node.isRequired,\n  handleSubmit: propTypes.func,\n  className: propTypes.string,\n  name: propTypes.string,\n};\n\nForm.defaultProps = {\n  handleSubmit: () => {},\n  className: '',\n  name: '',\n};\n\nexport default Form;\n","export function getTextWidth(text, selector) {\n  const element = document && document.querySelector(selector);\n  if (element) {\n    element.textContent = text;\n    return element.clientWidth || element.offsetWidth;\n  }\n  return 0;\n}\n\nexport function shouldUpdateValueLen(newLength) {\n  const textField = document.querySelector('div.text-field');\n  const width = textField.clientWidth;\n  if (newLength >= width) return width;\n  return newLength;\n}\n\nexport function buildSelectOptions(arr = []) {\n  if (Array.isArray(arr)) {\n    return arr.map(value => ({ label: value, value }));\n  }\n  return arr;\n}\n\nexport function capitalizeFirstLetter(letter) {\n  if (typeof letter === 'string') {\n    const firstLetter = letter.slice(0, 1);\n    return `${firstLetter.toUpperCase()}${letter.slice(1).toLowerCase()}`;\n  }\n  return letter;\n}\n","const accountSection = {\n  title: 'account',\n  links: [\n    { title: 'career', to: 'giselle/account/career' },\n    { title: 'personal', to: 'giselle/account/personal' },\n  ],\n};\nconst manageSection = {\n  title: 'manage',\n  links: [\n    { title: 'password', to: 'giselle/manage/password' },\n    { title: 'email', to: 'giselle/manage/email' },\n  ],\n};\nexport const SIDE_BAR_SECTIONS = [manageSection, accountSection];\nexport const COUNTRIES = [\n  'Albania',\n  'Algeria',\n  'Andorra',\n  'Angola',\n  'Anguilla',\n  'Antigua & Barbuda',\n  'Bahamas',\n  'Bahrain',\n  'Bangladesh',\n  'Barbados',\n  'Cambodia',\n  'Cameroon',\n  'Canada',\n  'Ecuador',\n  'Egypt',\n  'El Salvador',\n  'Germany',\n  'Ghana',\n  'Great Britain',\n  'Uganda',\n  'Ukraine',\n  'United States of America (USA)',\n];\n\nexport const PASSWORD = 'password';\nexport const TEXT = 'text';\nexport const DOT = '\\u2022';\n","import React, { PureComponent } from 'react';\nimport propTypes from 'prop-types';\nimport { getTextWidth, shouldUpdateValueLen, capitalizeFirstLetter } from '../../utils';\nimport { TEXT, PASSWORD } from '../../constants';\nimport './text-field.scss';\n\nclass TextField extends PureComponent {\n  state = {\n    value: this.props.value,\n    valueLen: 0,\n  };\n\n  getCSSClasses() {\n    const isPassword = this.isPassword();\n    const { value } = this.state;\n    const labelClass = value ? 'text-field__label--show' : '';\n    const hideBottomBorderClass = value ? 'text-field--hide-bm-border' : '';\n    const passwordClass = isPassword ? 'text-field--pwd' : '';\n    return { labelClass, hideBottomBorderClass, passwordClass };\n  }\n\n  handleChange = (event) => {\n    if (!event) return;\n    const { value } = event.target;\n    const { handleChange } = this.props;\n    this.updateState(value);\n    handleChange(value);\n  };\n\n  updateState(value) {\n    const valueLen = shouldUpdateValueLen(getTextWidth(value, '#len-indicator>span'));\n    this.setState({ valueLen, value });\n  }\n\n  // eslint-disable-next-line\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { value } = nextProps;\n    if (this.state.value !== value) {\n      this.updateState(value);\n    }\n  }\n\n  isPassword() {\n    const { type } = this.props;\n    return type === PASSWORD;\n  }\n\n  renderInput() {\n    const {\n      name, type, placeholder, inputProps,\n    } = this.props;\n    const { value } = this.state;\n    const isPassword = this.isPassword();\n    const passwordClass = isPassword ? 'text-field__input--pwd' : '';\n\n    return (\n      <input\n        type={isPassword ? TEXT : type}\n        id={name}\n        className={`text-field__input ${passwordClass}`}\n        placeholder={capitalizeFirstLetter(placeholder)}\n        onChange={this.handleChange}\n        value={value}\n        autoComplete=\"off\"\n        spellCheck={isPassword ? 'false' : 'true'}\n        {...inputProps}\n      />\n    );\n  }\n\n  render() {\n    const { name, label, className } = this.props;\n    const { valueLen } = this.state;\n    const { labelClass, hideBottomBorderClass, passwordClass } = this.getCSSClasses();\n    return (\n      <div\n        className={`text-field ${hideBottomBorderClass} ${className} ${passwordClass}`}\n        role=\"presentation\"\n        tabIndex=\"-1\"\n      >\n        {this.renderInput()}\n        <label htmlFor={name} className={`text-field__label ${labelClass}`}>\n          {capitalizeFirstLetter(label)}\n        </label>\n        <div\n          className=\"text-field__len\"\n          style={{ maxWidth: valueLen, width: valueLen }}\n          id=\"len-indicator\"\n        >\n          <span />\n        </div>\n      </div>\n    );\n  }\n}\n\nTextField.propTypes = {\n  value: propTypes.string,\n  name: propTypes.string,\n  type: propTypes.string,\n  label: propTypes.string,\n  className: propTypes.string,\n  placeholder: propTypes.string,\n  handleChange: propTypes.func,\n  inputProps: propTypes.objectOf(propTypes.shape),\n};\n\nTextField.defaultProps = {\n  value: '',\n  name: '',\n  type: 'text',\n  label: '',\n  className: '',\n  placeholder: 'Enter your text',\n  handleChange: () => {},\n  inputProps: {},\n};\n\nexport default TextField;\n","import React from 'react';\nimport Form from './Form';\nimport TextField from '../TextField';\n\nfunction Password() {\n  return (\n    <Form name=\"password information\">\n      <TextField\n        type=\"password\"\n        name=\"current password\"\n        placeholder=\"current password\"\n        label=\"current password\"\n      />\n      <TextField\n        type=\"password\"\n        name=\"new password\"\n        placeholder=\"new password\"\n        label=\"new password\"\n      />\n    </Form>\n  );\n}\n\nexport default Password;\n","import React, { PureComponent } from 'react';\nimport propTypes from 'prop-types';\nimport TextField from '../TextField';\nimport downArrow from '../../assets/img/downArrow.svg';\nimport './select.scss';\n\nclass Select extends PureComponent {\n  state = {\n    options: this.props.options,\n    label: this.props.currentItem.label,\n    hideOptions: true,\n  };\n\n  timeout = null;\n\n  componentWillMount() {\n    clearTimeout(this.timeout);\n  }\n\n  handleItemClick = item => () => {\n    const { handleChange, options } = this.props;\n    handleChange(item);\n    this.setState({\n      label: item.label,\n      options,\n      hideOptions: true,\n    });\n  };\n\n  handleFocus = () => {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n    this.setState({ hideOptions: false });\n  };\n\n  handleBlur = () => {\n    if (this.timeout) return;\n    this.timeout = setTimeout(() => this.setState({ hideOptions: true }), 100);\n  };\n\n  filterOptions = (change) => {\n    const { options } = this.props;\n    const pattern = new RegExp(change, 'gi');\n    let filteredOptions = options.filter(option => option.label.search(pattern) >= 0);\n    filteredOptions = filteredOptions.length > 0 ? filteredOptions : options;\n    this.setState({ options: filteredOptions, label: change });\n  };\n\n  renderDropDown() {\n    const { options = [] } = this.state;\n    return (\n      <ul className=\"select__options\">\n        {options.map(item => (\n          <li\n            className=\"select__option\"\n            key={item.label}\n            role=\"presentation\"\n            tabIndex=\"-1\"\n            onClick={this.handleItemClick(item)}\n          >\n            {item.label}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    const { label, hideOptions } = this.state;\n    const { label: selectLabel, placeholder } = this.props;\n    return (\n      <div\n        className=\"select\"\n        role=\"presentation\"\n        tabIndex=\"-1\"\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n      >\n        <TextField\n          className=\"select__text-field\"\n          value={label}\n          handleChange={this.filterOptions}\n          label={selectLabel}\n          placeholder={placeholder}\n        />\n        <img src={downArrow} alt=\"\" />\n        {!hideOptions && this.renderDropDown()}\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string,\n      value: propTypes.string,\n    }),\n  ).isRequired,\n  handleChange: propTypes.func,\n  currentItem: propTypes.shape({ label: propTypes.string, value: propTypes.string }),\n  label: propTypes.string,\n  placeholder: propTypes.string,\n};\n\nSelect.defaultProps = {\n  handleChange: () => {},\n  currentItem: { value: '', label: '' },\n  label: '',\n  placeholder: 'Enter your text',\n};\n\nexport default Select;\n","import React from 'react';\nimport Form from './Form';\nimport TextField from '../TextField';\nimport Select from '../Select';\nimport { COUNTRIES } from '../../constants';\nimport { buildSelectOptions } from '../../utils';\n\nfunction Personal() {\n  return (\n    <Form name=\"personal information\">\n      <TextField name=\"firstName\" placeholder=\"first name\" label=\"first name\" />\n      <TextField name=\"lastName\" placeholder=\"last name\" label=\"last name\" />\n      <TextField name=\"phone\" placeholder=\"phone\" label=\"phone\" type=\"tel\" />\n      <Select\n        name=\"country\"\n        placeholder=\"Select your country\"\n        options={buildSelectOptions(COUNTRIES)}\n        label=\"country\"\n      />\n    </Form>\n  );\n}\n\nexport default Personal;\n","import React from 'react';\nimport Form from './Form';\nimport TextField from '../TextField';\n\nfunction Email() {\n  return (\n    <Form name=\"change email information\">\n      <TextField\n        type=\"email\"\n        name=\"newEmail\"\n        placeholder=\"new email\"\n        label=\"new email\"\n        inputProps={{ required: true }}\n      />\n      <TextField\n        type=\"email\"\n        name=\"confirmEmail\"\n        placeholder=\"confirm email\"\n        label=\"confirm email\"\n        inputProps={{ required: true }}\n      />\n    </Form>\n  );\n}\n\nexport default Email;\n","import React from 'react';\nimport Form from './Form';\nimport TextField from '../TextField';\n\nfunction Career() {\n  return (\n    <Form name=\"career information\">\n      <TextField name=\"role\" placeholder=\"job role\" label=\"job role\" />\n      <TextField name=\"organisation\" placeholder=\"organisation\" label=\"organisation\" />\n    </Form>\n  );\n}\n\nexport default Career;\n","import React, { PureComponent } from 'react';\nimport { Router } from '@reach/router';\nimport SideBar from '../SideBar';\nimport SideBarButton from '../SideBarButton';\nimport Header from '../Header';\nimport {\n  Password, Personal, Email, Career,\n} from '../Forms';\nimport { SIDE_BAR_SECTIONS } from '../../constants';\n\nimport './user-account.scss';\n\nclass UserAccount extends PureComponent {\n  state = {\n    isSideBarOpen: false,\n  };\n\n  toggleSideBar = () => {\n    const { isSideBarOpen } = this.state;\n    this.setState({ isSideBarOpen: !isSideBarOpen });\n  };\n\n  render() {\n    const { isSideBarOpen } = this.state;\n    return (\n      <div className=\"user-account\">\n        <Header name=\"giselle\">\n          <SideBarButton\n            className=\"user-account__sidebar-btn\"\n            isOpen={isSideBarOpen}\n            handleClick={this.toggleSideBar}\n          />\n        </Header>\n\n        <div className=\"user-account__header\">\n          <h1>your account</h1>\n          <p>tell us a little more about yourself</p>\n        </div>\n        <div className=\"user-account__form\">\n          <Router>\n            <Password path=\"giselle/manage/password\" />\n            <Email path=\"giselle/manage/email\" />\n            <Personal path=\"giselle/account/personal\" />\n            <Career path=\"giselle/account/career\" />\n          </Router>\n        </div>\n\n        <SideBar sections={SIDE_BAR_SECTIONS} open={isSideBarOpen} />\n      </div>\n    );\n  }\n}\n\nexport default UserAccount;\n","import React, { Component } from 'react';\nimport UserAccount from './components/UserAccount';\n\nimport './App.scss';\n\n/* eslint-disable react/prefer-stateless-function */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <UserAccount />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}